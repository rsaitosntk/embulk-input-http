plugins {
    id "com.jfrog.bintray" version "1.8.4"
    id "com.github.jruby-gradle.base" version "1.6.0"
    id "java"
    id "checkstyle"
    id "maven-publish"
    id "org.embulk.embulk-plugins" version "0.4.1"
}

repositories {
    mavenCentral()
    jcenter()
}

version = "0.23.0"
group = "com.github.takumakanari"
description = "Fetch data via http(s)"

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
    compileOnly  "org.embulk:embulk-core:0.9.23"
    compile  "org.apache.httpcomponents:httpclient:4.5.9"
    compile  "commons-io:commons-io:2.6"

    testCompile "junit:junit:4.+"
    testCompile  "org.embulk:embulk-core:0.9.23:tests"
    testCompile  "org.embulk:embulk-standards:0.9.23"

    // TODO: Remove them.
    // These `testCompile` are a tentative workaround. It will be covered in Embulk core's testing mechanism.
    testCompile "org.embulk:embulk-deps-buffer:0.9.23"
    testCompile "org.embulk:embulk-deps-config:0.9.23"
}

embulkPlugin {
    mainClass = "org.embulk.input.http.HttpFileInputPlugin"
    category = "input"
    type = "http"
}

task checkstyle(type: Checkstyle) {
    classpath = sourceSets.main.output + sourceSets.test.output
    source = sourceSets.main.allJava + sourceSets.test.allJava
}

tasks.withType(JavaCompile) {
    options.compilerArgs << "-Xlint:deprecation" << "-Xlint:unchecked"
}

publishing {
    publications {
        embulkPluginMaven(MavenPublication) {  // Publish it with "publishEmbulkPluginMavenPublicationToMavenRepository".
            from components.java  // Must be "components.java". The dependency modification works only for it.
        }
    }
    repositories {
      // TODO: Configure some public Maven repo(s).
    }
}

gem {
  authors = ["Takuma kanari"]
  email = ["chemtrails.t@mail.com"]
  summary = "Embulk plugin for http input"
  homepage = "https://github.com/takumakanari/embulk-input-http"
  licenses = [ "MIT" ]
}

gemPush {
    host = "https://rubygems.org"
}


checkstyle {
    configFile = file("${project.rootDir}/config/checkstyle/checkstyle.xml")
    toolVersion = '6.14.1'
}

checkstyleMain {
    configFile = file("${project.rootDir}/config/checkstyle/default.xml")
    ignoreFailures = true
}

checkstyleTest {
    configFile = file("${project.rootDir}/config/checkstyle/default.xml")
    ignoreFailures = true
}
